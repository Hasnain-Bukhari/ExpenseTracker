version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: expense-tracker-db
    environment:
      POSTGRES_DB: expense_tracker_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./docker/db-init:/docker-entrypoint-initdb.d:ro
    networks:
      - expense-tracker-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # .NET API Backend
  api:
    build:
      context: ./src
      dockerfile: ExpenseTracker.API/Dockerfile
    container_name: expense-tracker-api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - CONNECTION_STRING=Host=localhost;Port=5432;Database=postgres;Username=hasnainbukhari;Password=;
      - JWT_SECRET=replace_this_secret_for_dev
      - ASPNETCORE_URLS=http://+:80
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "5001:80"
    networks:
      - expense-tracker-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Vue.js Frontend
  frontend:
    build:
      context: ../ExpenseTrackerUI
      dockerfile: Dockerfile
    container_name: expense-tracker-frontend
    ports:
      - "3000:80"
    depends_on:
      api:
        condition: service_healthy
    networks:
      - expense-tracker-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

networks:
  expense-tracker-network:
    driver: bridge

volumes:
  db-data:
